process CaloTest  = {
	service = MessageLogger
	{
      	untracked vstring destinations = {"warningHE.txt","debugHE.txt"}

      	vstring categories = {  "ValidHcal",
				"CaloSim",
				"EcalGeom",
				"EcalSim",
				"HcalGeom",
				"HcalSim",
				"HFShower"}
	vstring debugModules = { "*" }
	PSet warningHE.txt   = {string threshold = "WARNING"}
      	PSet debugHE.txt     = {string threshold = "DEBUG"
				PSet INFO     = { int32 limit = 0 }
				PSet DEBUG    = { int32 limit = 0 }
				PSet ValidHcal= { int32 limit = 10 }
				PSet CaloSim  = { int32 limit = 1 }
				PSet EcalGeom = { int32 limit = 0 }
				PSet EcalSim  = { int32 limit = 1 }
				PSet HcalGeom = { int32 limit = 0 }
				PSet HcalSim  = { int32 limit = 1 }
				PSet HFShower = { int32 limit = 0 }
				}
   	}
	
	source = FlatRandomEGunSource 
	{ 
		untracked int32 maxEvents = 1000
		PSet PGunParameters = {
			vint32 PartID = {211} 
			double MinEta = 2.108
			double MaxEta = 2.108
			double MinPhi = 0.611
			double MaxPhi = 0.611
			double MinE   = 30.
			double MaxE   = 30.
		}
	}

	service = RandomNumberGeneratorService
	{
		untracked uint32 sourceSeed = 135799753
		PSet moduleSeeds =
		{
			untracked uint32 VtxSmeared = 123456789
		}
	}

	#Geometry
        es_source = XMLIdealGeometryESSource {
                  FileInPath GeometryConfiguration = "Validation/HcalHits/test/data/testConfiguration.xml"
                  string rootNodeName = ""
        }
	#Magnetic Field
	es_source magfield = XMLIdealGeometryESSource {
		# FileInPath GeometryConfiguration ="SimG4Core/Application/test/FieldConfiguration.xml"
		FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
	#the proper root node is set in the xml file
		string rootNodeName=""
	}
	es_module = VolumeBasedMagneticFieldESProducer {
		double findVolumeTolerance = 0.0
		untracked bool cacheLastVolume = true
		untracked bool timerOn = false
	}

	module o1 = PoolOutputModule {untracked string fileName ="simevent_HE.root"} 
	
	module SimG4Object = OscarProducer 
	{ 
		#
		bool NonBeamEvent = false
		untracked int32 RunNumber = 1001
		#
		untracked int32 G4EventManagerVerbosity = 0
		untracked int32 G4StackManagerVerbosity = 0
		#
		bool UseMagneticField = true
		bool OverrideUserStackingAction = true
		bool StoreRndmSeeds = false
		bool RestoreRndmSeeds = false
		#
		# not sure if it should be (un)tracked ?
		#
		string PhysicsTablesDirectory = "PhysicsTables"
		bool StorePhysicsTables = false
		bool RestorePhysicsTables = false
		PSet MagneticField =
		{
			double delta = 1.
		}
               	PSet Physics =
		{
			string type = "SimG4Core/Physics/QGSP"
			bool DummyEMPhysics = false
			bool CutsPerRegion = true
			double DefaultCutValue = 10.   # cuts in cm
			untracked int32 Verbosity = 0  
		}
		PSet Generator = 
		{
			bool ApplyPtCuts = true
			bool ApplyEtaCuts = true
			bool ApplyPhiCuts = false
			double MinPhiCut = 0.
			double MaxPhiCut = 360.
			double MinEtaCut = -5.5
			double MaxEtaCut = 5.5
			double MinPtCut = 40.
			double MaxPtCut = 999999.
			untracked int32 Verbosity = 0
	        }
		PSet VertexGenerator =
		{
			string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
			double MeanX = 0.
			double MeanY = 0.
			double MeanZ = 0.
			double SigmaX = 0.001
			double SigmaY = 0.001
			double SigmaZ = 0.001
		}

		PSet RunAction = { string StopFile = "StopRun" }
		PSet EventAction = {
		     bool CollapsePrimaryVertices = false
		     string StopFile = "StopRun"
		     untracked bool debug = false
		}
		PSet TrackingAction = { untracked bool DetailedTiming = false }
	        PSet UtilityActions =
                {
                     string type = "SimG4Core/UtilityAction/TrackingVerboseAction"
                     untracked bool  DEBUG = false
                     untracked bool  CheckForHighEtPhotons = false
                     untracked int32 EventMin = 0
                     untracked int32 EventMax = 0
                     untracked int32 EventStep = 1
                     untracked int32 TrackMin = 0
                     untracked int32 TrackMax = 0
                     untracked int32 TrackStep = 1
                     untracked int32 VerboseLevel = 0 
                }

		PSet SteppingAction = {
		     bool   KillBeamPipe = true
		     double CriticalEnergyForVacuum = 2.0
		     double CriticalDensity = 1.e-25
		     untracked int32  Verbosity = 0
		}
		PSet CaloSD = 
		{
			double EminTrack = 1.0
			untracked int32  CheckHits = 25
			untracked bool   UseMap = true
			untracked int32  Verbosity = 0
			untracked bool   DetailedTiming = false
			bool   DetailedTiming = false
		}
		PSet ECalSD = 
		{
			bool   UseBirkLaw = false
			double BirkC1 = 0.013
			double BirkC2 = 9.6e-6
		}
		PSet HCalSD = 
		{
			bool   UseBirkLaw = false
			double BirkC1 = 0.013
			double BirkC2 = 9.6e-6
			bool   UseShowerLibrary = true
			bool   TestNumberingScheme = false
		}
		PSet CaloTrkProcessing = 
		{
			int32 Verbosity = 0
			bool   TestBeam  = false
			double EminTrack = 0.01
		}                     
		PSet HFShower =    
		{
			double ProbMax   = 0.7268
			double CFibre    = 0.50
		}
		PSet HFShowerLibrary = 
		{
			FileInPath FileName = "SimG4CMS/Calo/data/hfshowerlibrary_lhep.root"
			string TreeEMID  = "h3"
			string TreeHadID = "h8"
		}
		PSet HFCherenkov = 
		{
			double RefIndex        = 1.459
			double Lambda1         = 280.0
			double Lambda2         = 700.0
			double Aperture        = 0.33
			double ApertureTrapped = 0.22
			double Gain            = 0.33
			bool   CheckSurvive    = false
		}
		VPSet Watchers = {
		    {string type                   = "SimG4HcalValidation"
	 	     PSet SimG4HcalValidation = {
			int32   InfoLevel       = 2
			bool    HcalClusterOnly = false
			bool    HcalSampling    = true
			double  ConeSize        = 0.5
			double  EcalHitThreshold= 1e-20
			double  HcalHitThreshold= 1e-20
			double  TimeLowLimit    = 0.
			double  TimeUpLimit     = 999.
			double  JetThreshold    = 5.0
			double  Eta0            = 2.108
			double  Phi0            = 0.611
			vstring Names           = {"HcalHits", "EcalHitsEB",
						   "EcalHitsEE", "EcalHitsES"}
		     	}
		    }
		}
	}

       path p1 = { SimG4Object }
      endpath outpath = { o1 }


}		
