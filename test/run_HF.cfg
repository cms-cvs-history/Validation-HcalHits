process CaloTest  = {

	service = MessageLogger	{
		untracked vstring destinations = {"cout"} 
		vstring categories = { "FwkJob" }

		PSet cout = { 
			PSet default = { int32 limit = 0 }  # kill all messages in the log
			PSet FwkJob  = { int32 limit = -1 } # except *all* of FwkJob's	  
		}
		untracked vstring fwkJobReports = {"FrameworkJobReport_HF.xml"}
	}

	source = PoolSource {
		untracked vstring fileNames =
               {
               'file:/afs/cern.ch/cms/data/CMSSW/Validation/HcalHits/data/mc_pi+100_etaphi344.root'
               }
		untracked int32 maxEvents = -1
		untracked uint32 debugVebosity = 11
		untracked bool   debugFlag     = true
	}

        service = Timing {}

	service = RandomNumberGeneratorService {
		untracked uint32 sourceSeed = 135799753
		PSet moduleSeeds =
		{
			untracked uint32 VtxSmeared = 123456789
		}
	}

	module VtxSmeared = VertexGenerator {
		string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
		double MeanX = 0.
		double MeanY = 0.
		double MeanZ = 0.
		double SigmaX = 0.0001
		double SigmaY = 0.0001
		double SigmaZ = 0.0001  // in mm (as in COBRA/OSCAR)
	}


	#Magnetic Field 		
	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

	#Geometry
	include "Validation/HcalHits/test/data/testGeometryXML.cfi"

	module o1 = PoolOutputModule {untracked string fileName ="simevent_HF.root"} 
	
	module g4SimHits = OscarProducer 
	{ 
		#
		bool NonBeamEvent = false
		untracked int32 RunNumber = 1001
		#
		untracked int32 G4EventManagerVerbosity = 0
		untracked int32 G4StackManagerVerbosity = 0
                untracked int32 G4TrackingManagerVerbosity = 0
		#
		bool UseMagneticField = false
		bool OverrideUserStackingAction = true
		bool StoreRndmSeeds = false
		bool RestoreRndmSeeds = false
		#
		# not sure if it should be (un)tracked ?
		#
		string PhysicsTablesDirectory = "PhysicsTables"
		bool StorePhysicsTables = false
		bool RestorePhysicsTables = false
		PSet MagneticField =
		{
			double delta = 1.
		}
               	PSet Physics =
		{
			string type = "SimG4Core/Physics/QGSP"
			bool DummyEMPhysics = false
			bool CutsPerRegion = true
			double DefaultCutValue = 1000.   # cuts in cm
			untracked int32 Verbosity = 0  
		}
		PSet Generator = 
		{
			bool ApplyPtCuts = true
			bool ApplyEtaCuts = true
			bool ApplyPhiCuts = false
			double MinPhiCut = -3.14159265358979323846 
			double MaxPhiCut =  3.14159265358979323846
			double MinEtaCut = -5.5
			double MaxEtaCut = 5.5
			double MinPtCut = 0.040
			double MaxPtCut = 99999.
			untracked int32 Verbosity = 0
	        }

		PSet RunAction = { string StopFile = "StopRun" }
		PSet EventAction = {
		     bool CollapsePrimaryVertices = false
		     string StopFile = "StopRun"
		     untracked bool debug = false
		}
		PSet TrackingAction = { untracked bool DetailedTiming = false }

		PSet SteppingAction = {
		     bool   KillBeamPipe = true
		     double CriticalEnergyForVacuum = 2.0
		     double CriticalDensity = 1.e-25
		     untracked int32  Verbosity = 0
		}
		PSet CaloSD = 
		{
			double EminTrack = 1.0
			untracked int32  CheckHits = 25
			untracked bool   UseMap = true
			untracked bool   DetailedTiming = false
			untracked int32  Verbosity = 0
		}
		PSet ECalSD = 
		{
			bool   UseBirkLaw = false
			double BirkC1 = 0.013
			double BirkC2 = 9.6e-6
		}
		PSet HCalSD = 
		{
			bool   UseBirkLaw = false
			double BirkC1 = 0.013
			double BirkC2 = 9.6e-6
			bool   UseShowerLibrary = true
			bool   TestNumberingScheme = false
		}
		PSet CaloTrkProcessing = 
		{
			bool   TestBeam  = false
			double EminTrack = 0.01
		}                     
		PSet HFShower =    
		{
			double ProbMax   = 0.7268
			double CFibre    = 0.50
		}
		PSet HFShowerLibrary = 
		{
			FileInPath FileName = "SimG4CMS/Calo/data/hfshowerlibrary_lhep.root"
			string TreeEMID  = "h3"
			string TreeHadID = "h8"
		}
		PSet HFCherenkov = 
		{
			double RefIndex        = 1.459
			double Lambda1         = 280.0
			double Lambda2         = 700.0
			double Aperture        = 0.33
			double ApertureTrapped = 0.22
			double Gain            = 0.33
			bool   CheckSurvive    = false
		}

		VPSet Watchers = {
		{string type                   = "SimG4HcalValidation"
		 PSet SimG4HcalValidation = {
			int32   InfoLevel       = 2
			bool    HcalClusterOnly = false
			bool    HcalSampling    = true
			double  ConeSize        = 0.5
			double  EcalHitThreshold= 1e-20
			double  HcalHitThreshold= 1e-20
			double  TimeLowLimit    = 0.
			double  TimeUpLimit     = 999.
			double  JetThreshold    = 5.0
			double  Eta0            = 0.3045
			double  Phi0            = 0.3054
			vstring Names           = {"HcalHits", "EcalHitsEB",
			                           "EcalHitsEE", "EcalHitsES"}
                        }
                    },
		
		{string type = "TrackingVerboseAction"
			untracked bool  DEBUG = false
			untracked bool  CheckForHighEtPhotons = false
			untracked int32 EventMin = 0
			untracked int32 EventMax = 0
			untracked int32 EventStep = 1
			untracked int32 TrackMin = 0
			untracked int32 TrackMax = 0
			untracked int32 TrackStep = 1
			untracked int32 VerboseLevel = 0 
                }   }


	}

       path p1 = { VtxSmeared, g4SimHits }
      endpath outpath = { o1 }


}		
